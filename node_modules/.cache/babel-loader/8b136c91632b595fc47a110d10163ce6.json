{"ast":null,"code":"var _jsxFileName = \"/Users/ujeon/Dropbox/coding/codestates/immersive/im14-2019-08-react-todo-list/todolist/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Todos from \"../src/Todos/Todos\";\nimport Lists from \"../src/Lists/Lists\";\n/*******DATA SAMPLE ******/\n// {\n//   id: uniqId(),\n//   title: \"리스트 01\",\n//   todos: [\n//     {\n//       id: uniqId(),\n//       todo: \"투두 리스트 만들기\",\n//       done: false\n//     }\n//   ]\n// }\n\n/*************************/\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurrentList = list => {\n      this.setState({\n        currentList: list\n      });\n    };\n\n    this.changeTodoValue = value => {\n      this.setState({\n        currentTodoValue: value\n      });\n    };\n\n    this.createNewTodo = (id, todo) => {\n      const temp = {\n        id: id,\n        todo: todo,\n        done: false\n      };\n      this.unshiftTodoToList(temp);\n    };\n\n    this.unshiftTodoToList = todo => {\n      if (this.state.currentList) {\n        const copy = Object.assign({}, this.state.currentList);\n        copy.todos.unshift(todo);\n        this.listUpdate(copy);\n      }\n    };\n\n    this.listUpdate = target => {\n      let copyLists = this.state.lists.slice();\n\n      for (let i = 0; i < copyLists.length; i++) {\n        if (copyLists[i].id === target.id) {\n          copyLists[i] = target;\n        }\n      }\n\n      this.setState({\n        lists: copyLists\n      });\n    };\n\n    this.deleteList = id => {\n      let copy = this.state.lists;\n\n      for (let i = 0; i < copy.length; i++) {\n        if (copy[i].id === id) {\n          copy.splice(i, 1);\n        }\n      }\n    };\n\n    this.toggleDone = target => {\n      target.done === false ? target.done = true : target.done = false;\n      this.updateTodo(target, target.id);\n    };\n\n    this.updateTodo = (target, id) => {\n      let listCopy = this.state.currentList.todos.slice();\n\n      for (let i = 0; i < listCopy.length; i++) {\n        if (listCopy[i].id === id) {\n          listCopy[i] = target;\n        }\n      }\n\n      this.listUpdate(listCopy);\n    };\n\n    this.deleteTodo = id => {\n      for (let i = 0; i < this.state.currentList.todos.length; i++) {\n        if (this.state.currentList.todos[i].id === id) {\n          this.state.currentList.todos.splice(i, 1);\n        }\n\n        this.listUpdate(this.state.currentList);\n      }\n    };\n\n    this.setInputEmpty = () => {\n      this.setState({\n        currentTodoValue: \"\"\n      });\n    };\n\n    this.setCurrentListId = id => {\n      this.setState({\n        currentListId: id\n      });\n    };\n\n    this.state = {\n      lists: [],\n      currentList: undefined,\n      currentTodoValue: \"\",\n      currentListId: \"\"\n    };\n    this.createNewList = this.createNewList.bind(this);\n    this.filterList = this.filterList.bind(this);\n  } //NOTE 새로운 리스트를 만들고, 만든리스트를 현재 리스트로 설정\n\n\n  createNewList(id, title) {\n    const temp = {\n      id: id,\n      title: title,\n      todos: []\n    }; //NOTE 리스트 목록에 새로운 리스트 삽입\n\n    let copy = [...this.state.lists, temp];\n    this.setState({\n      currentList: temp,\n      currentListId: id,\n      lists: copy\n    });\n  } //NOTE 현재리스트를 설정\n\n\n  //NOTE 리스트를 클릭하면, 해당 리스트를 표시\n  filterList(id) {\n    let list;\n    this.state.lists.forEach(el => {\n      if (el.id === id) list = el;\n    });\n    this.setCurrentList(list);\n  } //NOTE 리스트 삭제\n\n\n  render() {\n    // console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"TODOLIST\"), React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section-lists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Lists, {\n      lists: this.state.lists,\n      currentList: this.state.currentList,\n      createNewList: this.createNewList,\n      filterList: this.filterList,\n      deleteList: this.deleteList,\n      todoValue: this.state.currentTodoValue,\n      setCurrentListId: this.setCurrentListId,\n      currentListId: this.state.currentListId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"section-todos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Todos, {\n      currentList: this.state.currentList,\n      todoValue: this.state.currentTodoValue,\n      createNewTodo: this.createNewTodo,\n      changeTodoValue: this.changeTodoValue,\n      toggleDone: this.toggleDone,\n      deleteTodo: this.deleteTodo,\n      setInputEmpty: this.setInputEmpty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ujeon/Dropbox/coding/codestates/immersive/im14-2019-08-react-todo-list/todolist/src/App.js"],"names":["React","Todos","Lists","App","Component","constructor","props","setCurrentList","list","setState","currentList","changeTodoValue","value","currentTodoValue","createNewTodo","id","todo","temp","done","unshiftTodoToList","state","copy","Object","assign","todos","unshift","listUpdate","target","copyLists","lists","slice","i","length","deleteList","splice","toggleDone","updateTodo","listCopy","deleteTodo","setInputEmpty","setCurrentListId","currentListId","undefined","createNewList","bind","filterList","title","forEach","el","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nimport Todos from \"../src/Todos/Todos\";\nimport Lists from \"../src/Lists/Lists\";\n\n/*******DATA SAMPLE ******/\n// {\n//   id: uniqId(),\n//   title: \"리스트 01\",\n//   todos: [\n//     {\n//       id: uniqId(),\n//       todo: \"투두 리스트 만들기\",\n//       done: false\n//     }\n//   ]\n// }\n/*************************/\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lists: [],\n      currentList: undefined,\n      currentTodoValue: \"\",\n      currentListId: \"\"\n    };\n\n    this.createNewList = this.createNewList.bind(this);\n    this.filterList = this.filterList.bind(this);\n  }\n\n  //NOTE 새로운 리스트를 만들고, 만든리스트를 현재 리스트로 설정\n  createNewList(id, title) {\n    const temp = {\n      id: id,\n      title: title,\n      todos: []\n    };\n\n    //NOTE 리스트 목록에 새로운 리스트 삽입\n    let copy = [...this.state.lists, temp];\n\n    this.setState({\n      currentList: temp,\n      currentListId: id,\n      lists: copy\n    });\n  }\n\n  //NOTE 현재리스트를 설정\n  setCurrentList = list => {\n    this.setState({ currentList: list });\n  };\n\n  //NOTE 투두 값 변경\n  changeTodoValue = value => {\n    this.setState({ currentTodoValue: value });\n  };\n\n  //NOTE 새로운 투두 만들기\n  createNewTodo = (id, todo) => {\n    const temp = {\n      id: id,\n      todo: todo,\n      done: false\n    };\n    this.unshiftTodoToList(temp);\n  };\n\n  //NOTE 현재 리스트에 할일(todos) 삽입\n  unshiftTodoToList = todo => {\n    if (this.state.currentList) {\n      const copy = Object.assign({}, this.state.currentList);\n      copy.todos.unshift(todo);\n      this.listUpdate(copy);\n    }\n  };\n\n  //NOTE 업데이트 된 리스트를 리스트에서 업데이트\n  listUpdate = target => {\n    let copyLists = this.state.lists.slice();\n    for (let i = 0; i < copyLists.length; i++) {\n      if (copyLists[i].id === target.id) {\n        copyLists[i] = target;\n      }\n    }\n    this.setState({ lists: copyLists });\n  };\n\n  //NOTE 리스트를 클릭하면, 해당 리스트를 표시\n  filterList(id) {\n    let list;\n    this.state.lists.forEach(el => {\n      if (el.id === id) list = el;\n    });\n\n    this.setCurrentList(list);\n  }\n\n  //NOTE 리스트 삭제\n  deleteList = id => {\n    let copy = this.state.lists;\n    for (let i = 0; i < copy.length; i++) {\n      if (copy[i].id === id) {\n        copy.splice(i, 1);\n      }\n    }\n  };\n\n  //NOTE 투두에 done 변경\n  toggleDone = target => {\n    target.done === false ? (target.done = true) : (target.done = false);\n    this.updateTodo(target, target.id);\n  };\n\n  //NOTE 투두에 변경이 있으면 현재 리스트에 변경사항 저장\n  updateTodo = (target, id) => {\n    let listCopy = this.state.currentList.todos.slice();\n    for (let i = 0; i < listCopy.length; i++) {\n      if (listCopy[i].id === id) {\n        listCopy[i] = target;\n      }\n    }\n    this.listUpdate(listCopy);\n  };\n\n  //NOTE 투두 삭제\n  deleteTodo = id => {\n    for (let i = 0; i < this.state.currentList.todos.length; i++) {\n      if (this.state.currentList.todos[i].id === id) {\n        this.state.currentList.todos.splice(i, 1);\n      }\n      this.listUpdate(this.state.currentList);\n    }\n  };\n\n  //NOTE currentTodoValue를 ''으로 변경\n  setInputEmpty = () => {\n    this.setState({ currentTodoValue: \"\" });\n  };\n\n  //NOTE 현재 선택된 리스트로 id 변경\n  setCurrentListId = id => {\n    this.setState({ currentListId: id });\n  };\n\n  render() {\n    // console.log(this.state);\n    return (\n      <div className=\"main\">\n        <div className=\"app-title\">TODOLIST</div>\n        <div className=\"section\">\n          <div className=\"section-lists\">\n            <Lists\n              lists={this.state.lists}\n              currentList={this.state.currentList}\n              createNewList={this.createNewList}\n              filterList={this.filterList}\n              deleteList={this.deleteList}\n              todoValue={this.state.currentTodoValue}\n              setCurrentListId={this.setCurrentListId}\n              currentListId={this.state.currentListId}\n            />\n          </div>\n          <div className=\"section-todos\">\n            <Todos\n              currentList={this.state.currentList}\n              todoValue={this.state.currentTodoValue}\n              createNewTodo={this.createNewTodo}\n              changeTodoValue={this.changeTodoValue}\n              toggleDone={this.toggleDone}\n              deleteTodo={this.deleteTodo}\n              setInputEmpty={this.setInputEmpty}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}